lua_package_path "/usr/local/openresty/site/lualib/resty/?.lua;/usr/local/lib/luarocks/share/lua/5.1/?.lua;;";

# Lua code to initialize config variables and to read the public key of the auth service from a file
init_by_lua_file /etc/openresty/lua/init.lua;

# Lua code to periodically check for expired sessions and terminate active connections
init_worker_by_lua_file /etc/openresty/lua/init_worker.lua;

server {
    listen       80;
    server_name  ${SERVER_NAME};
    # Comment next line for HTTP server validation and get an SSL certificate
    return 301 https://$host$request_uri;

    location /.well-known/pki-validation/ {
        root /var/www/html;
        allow all;
		# Uncomment next line for HTTP server validation and get an SSL certificate issued
		#autoindex on;
    }
}

server {
    listen 443 ssl;
    http2 on;
    server_name ${SERVER_NAME};

    ssl_certificate /etc/ssl/private/fullchain.pem;
    ssl_certificate_key /etc/ssl/private/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header Referrer-Policy no-referrer-when-downgrade;
    add_header X-XSS-Protection "1; mode=block";

    access_log /dev/stdout;

    location / {
        root /var/www/html;
        index index.html;
        try_files $uri $uri/ =404;
    }

    #location /auth {
    #    proxy_set_header Host $host;
    #    proxy_set_header X-Real-IP $remote_addr;
    #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #    proxy_set_header X-Forwarded-Proto $scheme;
    #
	#    proxy_pass http://localhost:8080/auth;
    #}

    location /guacamole/ {
        # Enable CORS
        #add_header 'Access-Control-Allow-Origin' $http_origin always;
        #add_header 'Access-Control-Allow-Credentials' 'true' always;
        #add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        #add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        #add_header 'Access-Control-Max-Age' 1728000 always;

        #if ($request_method = 'OPTIONS') {
        #    return 204;
        #}

        # Lua code to check the cookies and set the authorization header when it applies
        access_by_lua_file /etc/openresty/lua/access.lua;

        # Lua code to look for a token in the URL, validate it and to return a cookie when needed
        header_filter_by_lua_file /etc/openresty/lua/header_filter.lua;

        # Lua code to capture Guacamole's session token and store so the worker can later revoke it
        body_filter_by_lua_file /etc/openresty/lua/body_filter.lua;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Accept-Encoding "";
        proxy_buffering off;
        proxy_read_timeout 600s;
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;
        proxy_set_header Connection $http_connection;
        proxy_http_version 1.1;
        client_max_body_size 5M;
        access_log off;
        resolver 127.0.0.11;

        proxy_pass http://guacamole:8080/guacamole/;
    }   
}